.photography-container {
    max-width: var(--max-width);
    margin: 0 auto;
    padding: 2rem 1rem;
    padding-top: calc(var(--navbar-height) + 2rem);
    padding-bottom: calc(var(--navbar-height) + 2rem);
}

.photography-header {
    text-align: center;
    margin-bottom: 3rem;
}

.photo-filters {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;
    flex-wrap: wrap;
}

.filter-btn {
    composes: btn btn-primary from global;
}

.photo-grid {
    composes: grid grid-auto from global;
    padding: 1rem 0;
}

.photo-item {
    position: relative;
    border-radius: var(--border-radius);
    overflow: hidden;
    aspect-ratio: 3/4;
    cursor: pointer;
}

.photo-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
}

.photo-item:hover img {
    transform: scale(1.1);
}

.photo-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        to top,
        rgba(20, 20, 20, 0.9),
        transparent
    );
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    padding: 1.5rem;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.photo-item:hover .photo-overlay {
    opacity: 1;
}

.photo-overlay h3 {
    color: white;
    margin-bottom: 0.5rem;
    font-size: 1.25rem;
}

.photo-overlay p {
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.9rem;
}

/* 响应式适配 */
@media (max-width: 768px) {
    .photo-grid {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 1rem;
    }

    .photo-filters {
        gap: 0.5rem;
    }

    .filter-btn {
        padding: 0.4rem 1rem;
        font-size: 0.9rem;
    }
} 